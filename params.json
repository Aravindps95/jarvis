{"name":"Jarvis","body":"# Inspiration\r\n\r\nJarvis was inspired by works of [Bret Victor] (http://worrydream.com/), especially his talk [Inventing on Principle](http://www.youtube.com/watch?v=PUv66718DII).\r\nThe central idea is that the feedback loop when you are coding should be the shortest possible, so you can see the effect of your code changes instantly, or almost.\r\nJarvis implements a (small) subset of these ideas.\r\n\r\n# What is Jarvis\r\n\r\nJarvis is a Python programming companion. Point it to a python function, and it will execute it.\r\nAs soon as you change your code in your favorite text editor, Jarvis will detect it, and will rerun the function, using some nice Python tricks to reload code without rerunning the full interpreter.\r\n\r\nYou can insert in your code some debug statements, that will be displayed in the Jarvis interface. If an exception is raised, it will be shown as well.\r\n\r\nLast, but not least, if you are using [OpenSceneGraph](http://www.openscenegraph.org/)  Python bindings, you will be able to output an OSG tree to the Jarvis interface. This way, you can instantly see the new 3D scene your code is generating, in a way similar to the talk \"Inventing on Principle\".\r\n\r\n# Requirements\r\n\r\nJarvis uses [Qt](http://qt.nokia.com/downloads) & [PyQt](http://wiki.python.org/moin/PyQt),  [OpenSceneGraph](http://www.openscenegraph.org/) & [osgswig](http://code.google.com/p/osgswig/).\r\n\r\n# Installation\r\nYou just have to install the dependencies (osg, osgswig, qt, pyqt) and then `pip install pip`.\r\n\r\nAlternatively, you can use : `git clone https://github.com/madlag/jarvis.git jarvis`\r\n\r\nthen `sudo python setup.py install`\r\n\r\nor better, `sudo python setup.py develop`, to edit the code without reinstalling.\r\n\r\n# Authors\r\n\r\nFrancois Lagunas, CTO, [Stupeflix](http://www.stupeflix.com).","tagline":"Python development companion.","google":"UA-32596793-1","note":"Don't delete this file! It's used internally to help with page regeneration."}
